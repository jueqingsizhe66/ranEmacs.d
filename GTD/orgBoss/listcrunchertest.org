#+NAME: tfee
 - item: traffic fee (who: zhu, account: 300)
   - item: 火车(account:120)
   - item: 汽车(account:180)
 - item: hotel(who:zhao, account:1000)
   - item: Beijing(account:300)
   - item: Xian(account:700)

#+NAME:fee-summary
#+BEGIN_SRC elisp :result value :var lname="tfee" :exports both

  (org-listcruncher-to-table lname)
#+END_SRC

#+RESULTS: fee-summary
| description | account | who  |
|-------------+---------+------|
| 火车        |     120 | zhu  |
| 汽车        |     180 | zhu  |
| traffic fee |     180 | zhu  |
| Beijing     |     300 | zhao |
| Xian        |     700 | zhao |
| hotel       |     700 | zhao |


     

  #+NAME: lsttest
   - item: First item (kCHF: 15, recurrence: 1, until: 2020)
     - modification of the first item (kCHF: 20)
     - another modification of the first item (other: 500)
       - modification of the modification (other: 299)
   - item: second item (kCHF: 50, recurrence: 4)
     - category (recurrence: 5)
       - item: a category item A (kCHF: 10)
       - item: a category item B (kCHF: 20)
       - item: a category item C (kCHF: 30)
         - a modification to category item C (kCHF: 25, recurrence: 3)

     #+NAME: src-example1
     #+BEGIN_SRC elisp :results value :var lname="lsttest" :exports both
       (org-listcruncher-to-table lname)
   #+END_SRC

   #+RESULTS: src-example1
   | description       | other | kCHF | recurrence | until |
   |-------------------+-------+------+------------+-------|
   | First item        |   299 |   20 |          1 |  2020 |
   | a category item A |       |   10 |          5 |       |
   | a category item B |       |   20 |          5 |       |
   | a category item C |       |   25 |          3 |       |
   | second item       |       |   25 |          3 |       |

   
   #+BEGIN_SRC elisp :results output :var lname="lsttest"
     (pp (org-listcruncher--parselist (save-excursion
				       (goto-char (point-min))
				       (unless (search-forward-regexp (concat  "^ *#\\\+NAME: .*" lname) nil t)
					 (error "No list of this name found: %s" lname))
				       (forward-line 1)
				       (org-list-to-lisp))
				     nil
				     nil))
   #+END_SRC

   #+RESULTS:
   #+begin_example
   ((("kCHF" "25")
     ("recurrence" "3")
     ("kCHF" "30")
     ("kCHF" "20")
     ("kCHF" "10")
     ("recurrence" "5")
     ("kCHF" "50")
     ("recurrence" "4")
     ("other" "299")
     ("other" "500")
     ("kCHF" "20")
     ("kCHF" "15")
     ("recurrence" "1")
     ("until" "2020"))
    ((("description" "First item ")
      ("other" "299")
      ("other" "500")
      ("kCHF" "20")
      ("kCHF" "15")
      ("recurrence" "1")
      ("until" "2020"))
     (("description" "a category item A ")
      ("kCHF" "10")
      ("recurrence" "5")
      ("kCHF" "50")
      ("recurrence" "4"))
     (("description" "a category item B ")
      ("kCHF" "20")
      ("recurrence" "5")
      ("kCHF" "50")
      ("recurrence" "4"))
     (("description" "a category item C ")
      ("kCHF" "25")
      ("recurrence" "3")
      ("kCHF" "30")
      ("recurrence" "5")
      ("kCHF" "50")
      ("recurrence" "4"))
     (("description" "second item ")
      ("kCHF" "25")
      ("recurrence" "3")
      ("kCHF" "30")
      ("kCHF" "20")
      ("kCHF" "10")
      ("recurrence" "5")
      ("kCHF" "50")
      ("recurrence" "4"))))
   #+end_example

   
 #+BEGIN_SRC python :results output raw drawer :var tbl=src-example1 :colnames no
    import orgbabelhelper as obh

    df = obh.orgtable_to_dataframe(tbl, index="descr")
    print(obh.dataframe_to_orgtable(df, caption="Example 1"))
  #+END_SRC

  #+RESULTS:
  :RESULTS:
  #+CAPTION: Example 1
  |   | description       | other | kCHF | recurrence | until |
  |---+-------------------+-------+------+------------+-------|
  | 1 | First item        |   299 |   20 |          1 |  2020 |
  | 2 | a category item A |       |   10 |          5 |       |
  | 3 | a category item B |       |   20 |          5 |       |
  | 4 | a category item C |       |   25 |          3 |       |
  | 5 | second item       |       |   25 |          3 |       |

  :END:
  


   #+NAME: lstShipGalante
   - Our worminger service (service: SvcWorminger, account: Mercantides)
     - item: A world class worm (Terces: 300, recurrence: 5, type: livestock).
       - [2018-05-10 Thu] I got offered a better price (Terces: 280). This is
	 because I offered the owner a job on the ship - even though a particular
	 cutthroat almost prevented the deal by causing a major calamity
       - Seems that today's worms last a year less than in the good old times (recurrence: 4)
     - item: high quality fluke cleaner (Terces: 20, recurrence: 1, type: operations).
       Should be made from the best walrus bones.
     - item: worm fodder (Terces: 50, recurrence: 1, type: operations)
     - The needed manpower (type: manpower, recurrence: 1)
       - item: a competent worminger for 1y (Terces: 80)
       - item: an apprentice worminger for 1y (Terces: 30, account: Drofo)
   - Onboard Restaurant service (service: SvcRestaurant, account: Soldinck)
     - item: furniture (Terces: 80, recurrence: 8, type: investment)
     - item: tableware breakage (Terces: 20, recurrence: 1, type: operations)
       - [2018-05-18 Fri] I found a cheaper supplier (Terces: 16)
     - Manpower (type: manpower, recurrence: 1)
       - item: One head steward for 1y (Terces: 60, account: Captain Bount)
       - item: 2 stewards for 1y (Terces: 90)

 #+NAME: srcTable
   #+HEADER: :var lname="lstShipGalante" order='("service" "description" "Terces")
   #+BEGIN_SRC elisp :results value  :exports results
    (org-listcruncher-to-table lname order)
   #+END_SRC

   #+RESULTS: srcTable
   | service       | description                    | Terces | recurrence | type       | account       |
   |---------------+--------------------------------+--------+------------+------------+---------------|
   | SvcWorminger  | A world class worm             |    280 |          4 | livestock  | Mercantides   |
   | SvcWorminger  | high quality fluke cleaner     |     20 |          1 | operations | Mercantides   |
   | SvcWorminger  | worm fodder                    |     50 |          1 | operations | Mercantides   |
   | SvcWorminger  | a competent worminger for 1y   |     80 |          1 | manpower   | Mercantides   |
   | SvcWorminger  | an apprentice worminger for 1y |     30 |          1 | manpower   | Drofo         |
   | SvcRestaurant | furniture                      |     80 |          8 | investment | Soldinck      |
   | SvcRestaurant | tableware breakage             |     16 |          1 | operations | Soldinck      |
   | SvcRestaurant | One head steward for 1y        |     60 |          1 | manpower   | Captain Bount |
   | SvcRestaurant | 2 stewards for 1y              |     90 |          1 | manpower   | Soldinck      |

   
   #+NAME: lobPostAlignTables
   #+header: :var text="|5|22222|\n|0||\n|12|45|\n|---\n|||\n#+TBLFM:@>$1=vsum(@1..@-1)\n\n|1|22222|\n|0||\n|12|45|\n"
   #+BEGIN_SRC emacs-lisp :results value :exports both
     (with-temp-buffer
       (erase-buffer)
       (cl-assert text nil "PostAlignTables received nil instead of text ")
       (insert text)
       (beginning-of-buffer)
       (org-mode)
       (while
           (search-forward-regexp org-table-any-line-regexp nil t)
         (org-table-align)
         (org-table-recalculate 'iterate)
         (goto-char (org-table-end)))
       (buffer-string))
   #+END_SRC

   #+RESULTS: lobPostAlignTables
   #+begin_example
   |  5 | 22222 |
   |  0 |       |
   | 12 |    45 |
   |----+-------|
   | 17 |       |
   ,#+TBLFM:@>$1=vsum(@1..@-1)

   |  1 | 22222 |
   |  0 |       |
   | 12 |    45 |
   #+end_example


    #+HEADER: :var tbl=srcTable
   #+BEGIN_SRC python :results output raw drawer :colnames no :post lobPostAlignTables(*this*) :exports both
     import orgbabelhelper as obh
     import pandas as pd

     df = obh.orgtable_to_dataframe(tbl, index="descr")
     df["Terces"] = pd.to_numeric(df["Terces"])
     dfgrp = df.groupby(["service", "account"], as_index=False).sum()
     dfgrp = dfgrp[["service", "account", "Terces"]]
     print(obh.dataframe_to_orgtable(dfgrp, index=False, caption="Service costs and funding",
				     name="tblGrouped"))
   #+END_SRC 

   #+RESULTS:
   :RESULTS:
   #+CAPTION: Service costs and funding
   #+NAME: tblGrouped
   | service       | account       | Terces |
   |---------------+---------------+--------|
   | SvcRestaurant | Captain Bount |     60 |
   | SvcRestaurant | Soldinck      |    186 |
   | SvcWorminger  | Drofo         |     30 |
   | SvcWorminger  | Mercantides   |    430 |

   :END:

   
#+NAME: srcAccountPlot
   #+HEADER: :var fname="./listcruncher-grouped.png" tbl=tblGrouped svc="Worminger"
   #+BEGIN_SRC python :results file :colnames no :exports both
     import pandas as pd
     import orgbabelhelper as obh
     import matplotlib.pyplot as plt
     import seaborn; seaborn.set()

     svcstr = 'Svc' + svc
     df = obh.orgtable_to_dataframe(tbl)
     df.set_index(["service", "account"], inplace=True)
     df = df.unstack("account", fill_value=0.0)
     df=df["Terces"]
     df.reset_index("service", inplace=True)

     df[df["service"] == svcstr].plot(kind="bar", rot=0)

     ax = plt.gca()
     ax.axes.get_xaxis().set_ticklabels([])
     plt.title('Costs per year for %s Services on the Galante' % svc)
     plt.ylabel('Terces')
     plt.xlabel('')
     plt.tight_layout()

     plt.savefig(fname)
     return fname
   #+END_SRC

   #+RESULTS: srcAccountPlot
   [[file:./listcruncher-grouped.png]]


 #+CALL: srcAccountPlot(fname="./listcruncher-grouped2.png", tbl=tblGrouped, svc="Restaurant")

 #+RESULTS:
 [[file:./listcruncher-grouped2.png]]
 

   #+BEGIN_SRC python
     x = range(1,10)
     y = [xe*3 for xe in x]
     return [x,y]
#+END_SRC

#+RESULTS:
| 1 | 2 | 3 |  4 |  5 |  6 |  7 |  8 |  9 |
| 3 | 6 | 9 | 12 | 15 | 18 | 21 | 24 | 27 |


     #+BEGIN_SRC python :result output
       import numpy as np

       x = range(1,10)
       y = [xe*3 for xe in x]
       return np.array([x,y]).transpose()
   #+END_SRC

   #+RESULTS:
   | 1 |  3 |
   | 2 |  6 |
   | 3 |  9 |
   | 4 | 12 |
   | 5 | 15 |
   | 6 | 18 |
   | 7 | 21 |
   | 8 | 24 |
   | 9 | 27 |

   


  
